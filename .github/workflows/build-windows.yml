name: Build and Test Windows

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Run unit tests
      run: npm run test:unit
      continue-on-error: false
      
    - name: Run integration tests
      run: npm run test:integration
      continue-on-error: false
      
    - name: Run test coverage
      run: npm run test:coverage
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage
        fail_ci_if_error: false
        
    - name: Build Electron app for Windows
      run: npm run dist
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: List build artifacts
      run: |
        echo "Build output directory contents:"
        dir dist-electron
        if (Test-Path "dist-electron\*.exe") {
          echo "Found .exe files:"
          Get-ChildItem dist-electron\*.exe | ForEach-Object { echo $_.Name }
        }
      shell: powershell
      
    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: windows-executable-${{ github.sha }}
        path: |
          dist-electron/*.exe
          dist-electron/*.msi
        retention-days: 30
        
    - name: Upload installer artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer-${{ github.sha }}
        path: |
          dist-electron/*.exe
          dist-electron/*.msi
          dist-electron/*.nsis.7z
        retention-days: 30
        if-no-files-found: warn
        
  # Optional: Create a release if this is a tagged version
  create-release:
    needs: build-windows
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-installer-${{ github.sha }}
        path: ./release-assets
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./release-assets/*.exe
          ./release-assets/*.msi
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}